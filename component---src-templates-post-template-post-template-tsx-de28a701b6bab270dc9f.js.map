{"version":3,"file":"component---src-templates-post-template-post-template-tsx-de28a701b6bab270dc9f.js","mappings":"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","sources":["webpack://gatsby-starter-lumen/./src/components/Button/Button.tsx","webpack://gatsby-starter-lumen/./src/components/Button/Button.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Post.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport cn from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Button.module.scss\";\n\ninterface Props {\n  className?: string;\n  title: string;\n  to: string;\n}\n\nconst Button: React.FC<Props> = ({ className, title, to }: Props) => (\n  <Link className={cn(styles.button, className)} to={to}>\n    {title}\n  </Link>\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--b1113\";","import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\nimport { getContactHref } from \"@/utils\";\n\nimport * as styles from \"./Author.module.scss\";\n\nconst Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles.author}>\n      <p className={styles.bio}>\n        {author.bio}\n        <br />\n        <i>Find Pianobin on <a\n          className={styles.twitter}\n          href={getContactHref(\"youtube\", author.contacts.youtube)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        ><strong>YouTube</strong></a>.</i>\n      </p>\n    </div>\n  );\n};\n\nexport default Author;\n","// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--1c58d\";\nexport var bio = \"Author-module--bio--08950\";\nexport var twitter = \"Author-module--twitter--90647\";","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Meta.module.scss\";\n\ninterface Props {\n  date: string;\n}\n\nconst Meta: React.FC<Props> = ({ date }: Props) => (\n  <div className={styles.meta}>\n    <p className={styles.date}>\n      Published{\" \"}\n      {new Date(date).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}\n    </p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\n\nimport * as styles from \"./Tags.module.scss\";\n\ntype Props = {\n  tags: string[];\n  tagSlugs: string[];\n};\n\nconst Tags = ({ tags, tagSlugs }: Props) => (\n  <div className={styles.tags}>\n    <ul className={styles.list}>\n      {tagSlugs\n        ? tagSlugs.map((slug, i) => (\n            <li className={styles.item} key={slug}>\n              <Button title={tags[i]} key={slug} to={slug} />\n            </li>\n          ))\n        : null}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var item = \"Tags-module--item--52015\";\nexport var list = \"Tags-module--list--82ae6\";\nexport var tags = \"Tags-module--tags--18589\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport type { Node } from \"@/types\";\n\nimport { Author } from \"./Author\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  const [showComments, setShowComments] = React.useState(false);\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\n        <ThemeSwitcher />\n      </div>\n\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttoncomment = \"Post-module--buttoncomment--d1e0a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage.publicURL);\n\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["_ref","className","title","to","React","Link","cn","author","useSiteMetadata","bio","href","getContactHref","contacts","youtube","rel","target","body","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","tags","tagSlugs","map","slug","i","key","Button","post","html","fields","frontmatter","showComments","setShowComments","ThemeSwitcher","Content","Meta","Tags","Author","Head","_ref2","data","subtitle","url","postTitle","description","postDescription","socialImage","markdownRemark","image","publicURL","concat","Layout","Post"],"sourceRoot":""}